<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" x:Class="VocbularyTutor.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
    	
	    <LinearGradientBrush x:Key="SelectedBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="Gray" Offset="0.965"/>
                <GradientStop Color="WhiteSmoke" Offset="1.0"/>
            </GradientStopCollection>
  </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel>
                    	<Border
                    		Panel.ZIndex="50"
                    		Margin="0,0,-1,0" 
                    		Background="{x:Null}"
                    		BorderBrush="{x:Null}"
                    		BorderThickness="1">
                    		<TabPanel
                    			Margin="0,0,0,0"
                    			IsItemsHost="True"/>
                    	</Border>
                        <Border
                            BorderBrush="{x:Null}"
                            BorderThickness="1"
                            Background="#FFE9EDDF" >
                            <ContentPresenter 
                                ContentSource="SelectedContent" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="Border" 
                            Background="#FFAAAAAA"
                            CornerRadius="7,0,0,0"
                            BorderBrush="Gray"
                            BorderThickness="0,0,0,0"
                            Panel.ZIndex="50"
                            Margin="0,0,0,0"
                                >

                            <ContentPresenter x:Name="ContentSite"             
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                ContentSource="Header"
                                Margin="10,10,10,10"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Margin" Value="0,0,-2,0" />
                            <Setter TargetName="Border" 
                                    Property="BorderBrush" 
                                    Value="{StaticResource SelectedBorderBrush}"/>

                            <Setter TargetName="Border" 
                                Property="Background" 
                                Value="#FFE9EDDF" />
                            <Setter TargetName="Border" 
                                Property="CornerRadius" 
                                Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>	
		
     <Style x:Key="DialogButtonStyle" TargetType="Button">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                <Grid>
            		<Grid.ColumnDefinitions>
            			<ColumnDefinition Width="0.2*"/>
            			<ColumnDefinition Width="0.6*"/>
            			<ColumnDefinition Width="0.2*"/>
            		</Grid.ColumnDefinitions>
            		<Grid.RowDefinitions>
            			<RowDefinition Height="0.2*"/>
            			<RowDefinition Height="0.6*"/>
            			<RowDefinition Height="0.2*"/>
            		</Grid.RowDefinitions>
            		<VisualStateManager.VisualStateGroups>
            			<VisualStateGroup x:Name="CommonStates">
            				<VisualState x:Name="Normal">
            					<Storyboard>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</VisualState>
            				<VisualState x:Name="MouseOver">
            					<Storyboard>
            						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="ellipse">
            							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            						</DoubleAnimationUsingKeyFrames>
            					</Storyboard>
            				</VisualState>
            				<VisualState x:Name="Pressed">
            					<Storyboard>
            						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
            							<EasingColorKeyFrame KeyTime="0" Value="#FFA1FF06"/>
            						</ColorAnimationUsingKeyFrames>
            					</Storyboard>
            				</VisualState>
            				<VisualState x:Name="Disabled"/>
            			</VisualStateGroup>
            		</VisualStateManager.VisualStateGroups>
            		<Ellipse x:Name="ellipse" Stroke="Black" StrokeThickness="3" Grid.RowSpan="3" Grid.ColumnSpan="3">
            			<Ellipse.Fill>
            				<SolidColorBrush Color="#FF03B206" Opacity="100"/>
            			</Ellipse.Fill>
            		</Ellipse>
            		<ContentPresenter  Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            	</Grid>            
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
     <Style x:Key="ButtonFocusVisual">
     	<Setter Property="Control.Template">
     		<Setter.Value>
     			<ControlTemplate>
     				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
     			</ControlTemplate>
     		</Setter.Value>
     	</Setter>
     </Style>
	 
     <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
     	<GradientStop Color="#F3F3F3" Offset="0"/>
     	<GradientStop Color="#EBEBEB" Offset="0.5"/>
     	<GradientStop Color="#DDDDDD" Offset="0.5"/>
     	<GradientStop Color="#CDCDCD" Offset="1"/>
     </LinearGradientBrush>
     <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
	 <SolidColorBrush x:Key="TopTextColor" Color="#FFA1FF06"/>
	 <SolidColorBrush x:Key="BackgroundBrush" Color="#FF586971"/>
	 <SolidColorBrush x:Key="TabItemBackgroundBrush" Color="#FFE9EDDF"/>
     <ControlTemplate x:Key="CommonButton" TargetType="{x:Type Button}">
     	<Grid>
     		<VisualStateManager.VisualStateGroups>
     			<VisualStateGroup x:Name="CommonStates">
     				<VisualState x:Name="Normal"/>
     				<VisualState x:Name="MouseOver">
     					<Storyboard>
     						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
     							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
     						</DoubleAnimationUsingKeyFrames>
     						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
     							<EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
     						</DoubleAnimationUsingKeyFrames>
     						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="rectangle">
     							<EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
     						</DoubleAnimationUsingKeyFrames>
     					</Storyboard>
     				</VisualState>
     				<VisualState x:Name="Pressed">
     					<Storyboard>
     						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
     							<EasingColorKeyFrame KeyTime="0" Value="#FFA1FF06"/>
     						</ColorAnimationUsingKeyFrames>
     						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
     							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
     						</DoubleAnimationUsingKeyFrames>
     					</Storyboard>
     				</VisualState>
     				<VisualState x:Name="Disabled"/>
     			</VisualStateGroup>
     		</VisualStateManager.VisualStateGroups>
     		<Rectangle x:Name="rectangle" Fill="{StaticResource BackgroundBrush}" Margin="0" Opacity="100" Stroke="{x:Null}" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
     			<Rectangle.RenderTransform>
     				<TransformGroup>
     					<ScaleTransform/>
     					<SkewTransform/>
     					<RotateTransform/>
     					<TranslateTransform/>
     				</TransformGroup>
     			</Rectangle.RenderTransform>
     		</Rectangle>
     		<ContentPresenter Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/> 	
     	</Grid>
     </ControlTemplate>
     <Style x:Key="DefaultVTTextBlockStyle" TargetType="{x:Type TextBlock}">
     	<Setter Property="TextWrapping" Value="NoWrap"/>
     	<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
		<Setter Property="FontSize" Value="24"/>
     </Style>
     </Application.Resources>
</Application>
